#!/bin/bash
#jq can be found on https://github.com/jqlang/jq
ip=$(curl -s wtfismyip.com/text)
loc=$(curl -s https://ipapi.co/"$ip"/json/)
lat=$(echo "$loc" | jq -r '.latitude')
long=$(echo "$loc" | jq -r '.longitude')
city=$(echo "$loc" | jq -r '.city')
region=$(echo "$loc" | jq -r '.region_code')
country=$(echo "$loc" | jq -r '.country')
ver="0.1.2"
help(){
    echo "Weermeter $ver"
    echo "usage:"
    echo "-c (displays temperature in celcius)"
    echo "-f (displays temperature in fahrenheit)"
    echo "-h (displays this help prompt)"
    echo "-v (displays version)"
}
americatemp(){
    meteo=$(curl -s "https://api.open-meteo.com/v1/forecast?latitude="$lat"&longitude="$long"&current=temperature_2m&temperature_unit=fahrenheit&forecast_days=1&current=is_day,apparent_temperature")
    current_temp=$(echo "$meteo" | jq -r --compact-output '.current.temperature_2m')
    temp_unit=$(echo "$meteo" | jq -r --compact-output '.current_units.temperature_2m')
    feelslike=$(echo "$meteo" | jq -r --compact-output '.current.apparent_temperature')
}
worldtemp(){
    meteo=$(curl -s "https://api.open-meteo.com/v1/forecast?latitude="$lat"&longitude="$long"&current=temperature_2m&forecast_days=1&current=is_day,apparent_temperature")
    current_temp=$(echo "$meteo" | jq -r --compact-output '.current.temperature_2m')
    temp_unit=$(echo "$meteo" | jq -r --compact-output '.current_units.temperature_2m')
    feelslike=$(echo "$meteo" | jq -r --compact-output '.current.apparent_temperature')
}
if [[ "$1" = -h ]]; then
    help
    exit 0
fi
if [[ "$1" = -v ]]; then
    echo "$ver"
    exit 0
fi
if [[ $country = 'US' || "$1" = -f ]]; then
    americatemp
fi
if [[ ! $country = 'US' || "$1" = -c ]]; then
    worldtemp
fi
echo "$city, $region, $country"
echo "Coordinates: $lat, $long"
echo "Current temp: $current_temp $temp_unit"
echo "Feels like: $feelslike $temp_unit"